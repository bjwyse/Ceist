/*
    Ceist Question Generation (QG) System
    Copyright (C) 2010  Brendan Wyse <bjwyse@gmail.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

*/

package Ceist;

import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;

public class dlgSpecifyData extends javax.swing.JDialog {

    private CeistApp mainApp;

    /** Creates new form dlgSpecifyData */
    public dlgSpecifyData(java.awt.Frame parent) {
        super(parent);
        initComponents();
        
        mainApp = CeistApp.getApplication();
    }
    
    /** Creates new form dlgSpecifyData */
    public dlgSpecifyData(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnAutoSelect = new java.awt.Button();
        sliderAutoSelect = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCustomFilter = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstAllData = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstDevelopmentData = new javax.swing.JList();
        btnAddSingleToDevelopment = new javax.swing.JButton();
        btnAddAllToDevelopment = new javax.swing.JButton();
        btnDeleteAllFromDevelopment = new javax.swing.JButton();
        btnDeleteFromDevelopment = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelPercentageSelected = new javax.swing.JLabel();
        btnAddSingleToTest = new javax.swing.JButton();
        btnAddAllToTest = new javax.swing.JButton();
        btnDeleteAllFromTest = new javax.swing.JButton();
        btnDeleteFromTest = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstTestData = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setName("jPanel1"); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setName("jPanel3"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(Ceist.CeistApp.class).getContext().getResourceMap(dlgSpecifyData.class);
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "A", "B", "C", "D", "E", "F", "G", "H", "J", "L", "M", "N", "P", "R" }));
        cmbCategory.setName("cmbCategory"); // NOI18N
        cmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("test.border.title"))); // NOI18N
        jPanel2.setName("test"); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAutoSelect.setLabel(resourceMap.getString("btnAutoSelect.label")); // NOI18N
        btnAutoSelect.setName("btnAutoSelect"); // NOI18N
        btnAutoSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoSelectActionPerformed(evt);
            }
        });

        sliderAutoSelect.setMajorTickSpacing(10);
        sliderAutoSelect.setMinorTickSpacing(5);
        sliderAutoSelect.setPaintLabels(true);
        sliderAutoSelect.setPaintTicks(true);
        sliderAutoSelect.setSnapToTicks(true);
        sliderAutoSelect.setValue(10);
        sliderAutoSelect.setName("sliderAutoSelect"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(sliderAutoSelect, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnAutoSelect, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel6)
                        .add(100, 100, 100)
                        .add(jLabel5)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(sliderAutoSelect, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(jLabel5)))
                    .add(btnAutoSelect, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(457, 457, 457)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtCustomFilter.setText(resourceMap.getString("txtCustomFilter.text")); // NOI18N
        txtCustomFilter.setName("txtCustomFilter"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(txtCustomFilter)
                    .add(cmbCategory, 0, 81, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(jPanel3Layout.createSequentialGroup()
                .add(36, 36, 36)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cmbCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtCustomFilter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setName("jPanel5"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lstAllData.setModel(new DefaultListModel());
        lstAllData.setName("lstAllData"); // NOI18N
        lstAllData.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lstAllDataPropertyChange(evt);
            }
        });
        lstAllData.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAllDataValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstAllData);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        lstDevelopmentData.setModel(new DefaultListModel());
        lstDevelopmentData.setName("lstDevelopmentData"); // NOI18N
        jScrollPane2.setViewportView(lstDevelopmentData);

        btnAddSingleToDevelopment.setText(resourceMap.getString("btnAddSingleToDevelopment.text")); // NOI18N
        btnAddSingleToDevelopment.setName("btnAddSingleToDevelopment"); // NOI18N
        btnAddSingleToDevelopment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSingleToDevelopmentActionPerformed(evt);
            }
        });

        btnAddAllToDevelopment.setText(resourceMap.getString("btnAddAllToDevelopment.text")); // NOI18N
        btnAddAllToDevelopment.setName("btnAddAllToDevelopment"); // NOI18N
        btnAddAllToDevelopment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAllToDevelopmentActionPerformed(evt);
            }
        });

        btnDeleteAllFromDevelopment.setText(resourceMap.getString("btnDeleteAllFromDevelopment.text")); // NOI18N
        btnDeleteAllFromDevelopment.setName("btnDeleteAllFromDevelopment"); // NOI18N
        btnDeleteAllFromDevelopment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllFromDevelopmentActionPerformed(evt);
            }
        });

        btnDeleteFromDevelopment.setText(resourceMap.getString("btnDeleteFromDevelopment.text")); // NOI18N
        btnDeleteFromDevelopment.setName("btnDeleteFromDevelopment"); // NOI18N
        btnDeleteFromDevelopment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFromDevelopmentActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        labelPercentageSelected.setText(resourceMap.getString("labelPercentageSelected.text")); // NOI18N
        labelPercentageSelected.setName("labelPercentageSelected"); // NOI18N

        btnAddSingleToTest.setText(resourceMap.getString("btnAddSingleToTest.text")); // NOI18N
        btnAddSingleToTest.setName("btnAddSingleToTest"); // NOI18N
        btnAddSingleToTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSingleToTestActionPerformed(evt);
            }
        });

        btnAddAllToTest.setText(resourceMap.getString("btnAddAllToTest.text")); // NOI18N
        btnAddAllToTest.setName("btnAddAllToTest"); // NOI18N
        btnAddAllToTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAllToTestActionPerformed(evt);
            }
        });

        btnDeleteAllFromTest.setText(resourceMap.getString("btnDeleteAllFromTest.text")); // NOI18N
        btnDeleteAllFromTest.setName("btnDeleteAllFromTest"); // NOI18N
        btnDeleteAllFromTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllFromTestActionPerformed(evt);
            }
        });

        btnDeleteFromTest.setText(resourceMap.getString("btnDeleteFromTest.text")); // NOI18N
        btnDeleteFromTest.setName("btnDeleteFromTest"); // NOI18N
        btnDeleteFromTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteFromTestActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        lstTestData.setModel(new DefaultListModel());
        lstTestData.setName("lstTestData"); // NOI18N
        jScrollPane3.setViewportView(lstTestData);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        btnOK.setText(resourceMap.getString("btnOK.text")); // NOI18N
        btnOK.setName("btnOK"); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel5Layout.createSequentialGroup()
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel5Layout.createSequentialGroup()
                                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(btnAddSingleToDevelopment, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                            .add(btnAddAllToDevelopment, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                                        .add(2, 2, 2))
                                    .add(btnDeleteAllFromDevelopment, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .add(btnDeleteFromDevelopment, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .add(jLabel3))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel5Layout.createSequentialGroup()
                                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(10, 10, 10)
                                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(btnDeleteAllFromTest, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                    .add(jPanel5Layout.createSequentialGroup()
                                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, btnAddAllToTest, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, btnAddSingleToTest, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                                        .add(10, 10, 10))
                                    .add(btnDeleteFromTest, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)))
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(labelPercentageSelected)
                        .add(369, 369, 369)))
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(btnOK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {btnAddAllToTest, btnAddSingleToTest, btnDeleteAllFromTest, btnDeleteFromTest}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.linkSize(new java.awt.Component[] {jScrollPane1, jScrollPane2, jScrollPane3}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.linkSize(new java.awt.Component[] {btnAddAllToDevelopment, btnAddSingleToDevelopment, btnDeleteAllFromDevelopment, btnDeleteFromDevelopment}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jLabel2)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 348, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnOK))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel5Layout.createSequentialGroup()
                                .add(btnAddSingleToDevelopment)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnAddAllToDevelopment)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(btnDeleteAllFromDevelopment)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(btnDeleteFromDevelopment))
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(labelPercentageSelected)
                        .add(112, 112, 112))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(btnAddSingleToTest)
                        .add(11, 11, 11)
                        .add(btnAddAllToTest)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnDeleteAllFromTest)
                        .add(14, 14, 14)
                        .add(btnDeleteFromTest))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(new java.awt.Component[] {jScrollPane1, jScrollPane2, jScrollPane3}, org.jdesktop.layout.GroupLayout.VERTICAL);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 419, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // Populate the list of all files in the folder
        updateAllDataList();

        // And remove the selected ones and place in dev or test lists
        String testFiles = mainApp.prefs.get("TEST_SET", "");
        String devFiles = mainApp.prefs.get("DEVELOPMENT_SET", "");
        
        this.addItemsToJList(lstTestData, testFiles);
        this.addItemsToJList(lstDevelopmentData, devFiles);
    }//GEN-LAST:event_formWindowGainedFocus

    private void updateAllDataList ()
    {
        // All Data contains all files on the Tree Folder
        String treeFolder = mainApp.prefs.get ("TREE_FOLDER", "");
       
        System.out.println ("Tree Folder" + treeFolder);
        File file = new File (treeFolder);
        
        String [] files = file.list();
        DefaultListModel model = new DefaultListModel();
        
        for (String fileName : files)
        {
            // Filter by the selected category in the combobox
            // Depends on files named 'cX...' where X is the category
            if ( fileName.toLowerCase().endsWith(".stp") && 
                    ( cmbCategory.getSelectedItem().toString().equals("All") ||
                      fileName.startsWith("c" + cmbCategory.getSelectedItem().toString().toLowerCase() ))
            )
                model.addElement(fileName.subSequence(0, fileName.length() - 4));
        }

        this.lstAllData.setModel(model);
    }

    private void cmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryActionPerformed

        updateAllDataList();
        
    }//GEN-LAST:event_cmbCategoryActionPerformed

    private void lstAllDataPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lstAllDataPropertyChange
    // TODO add your handling code here:
    }//GEN-LAST:event_lstAllDataPropertyChange

    private void lstAllDataValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAllDataValueChanged
        int countSelected = lstAllData.getSelectedIndices().length;
        int countAll = lstAllData.getModel().getSize();
        float percentage = ((float)countSelected / (float)countAll) * 100.0f;
        
        this.labelPercentageSelected.setText( countSelected + " of " + countAll + " selected. (" + String.format ("%.1f", percentage) + "%)");
    }//GEN-LAST:event_lstAllDataValueChanged

    private void btnAddSingleToDevelopmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSingleToDevelopmentActionPerformed
        addSelectedToJList (lstDevelopmentData);
    }//GEN-LAST:event_btnAddSingleToDevelopmentActionPerformed

    private void btnAddSingleToTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSingleToTestActionPerformed
        addSelectedToJList (lstTestData);
    }//GEN-LAST:event_btnAddSingleToTestActionPerformed

    private void btnAddAllToDevelopmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAllToDevelopmentActionPerformed
        // Select all items and copy across
        this.lstAllData.setSelectionInterval(0, lstAllData.getModel().getSize() - 1);   
        addSelectedToJList (lstDevelopmentData);
    }//GEN-LAST:event_btnAddAllToDevelopmentActionPerformed

    private void btnAddAllToTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAllToTestActionPerformed
        // Select all items and copy across
        this.lstAllData.setSelectionInterval(0, lstAllData.getModel().getSize() - 1);   
        addSelectedToJList (lstTestData);
    }//GEN-LAST:event_btnAddAllToTestActionPerformed

    private void btnDeleteAllFromDevelopmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllFromDevelopmentActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteAllFromDevelopmentActionPerformed

    private void btnDeleteAllFromTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllFromTestActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteAllFromTestActionPerformed

    private void btnAutoSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoSelectActionPerformed
        
        // Move a percentage of files from each category into test and the rest into development
        // depending on the slider value
        
        // All Data contains all files on the Tree Folder
        String treeFolder = mainApp.prefs.get ("TREE_FOLDER", "");
       
        System.out.println ("Tree Folder" + treeFolder);
        File file = new File (treeFolder);
            
        String [] files = file.list();
        DefaultListModel model = new DefaultListModel();
        
        // Get all the categories from the combobox
        // ignoring the first item, which is 'All'
        List<String> categories = new ArrayList<String>();
        for (int i = 1; i < cmbCategory.getModel().getSize(); i++ )
            categories.add (cmbCategory.getModel().getElementAt(i).toString());

        DefaultListModel testModel = new DefaultListModel();
        DefaultListModel developmentModel = new DefaultListModel();
        float percentTarget = (float)this.sliderAutoSelect.getValue();
        
        for (String category : categories)
        {
            System.out.println ("Auto selecting from " + category);
            float count = 0.0f;
            // Count up all files for this category
            for (String fileName : files)
            {
                if (fileName.startsWith("c" + category.toLowerCase()))
                    count = count + 1.0f;
            }
            
            float added = 0.0f;

            for (String fileName : files)
            {
                if ( fileName.startsWith("c" + category.toLowerCase()))
                {
                    float percentageAdded = (added/count) * 100.0f;
                    if (percentageAdded > percentTarget)
                    {
                        System.out.println(String.format("Current percentage %.2f: Adding to Test", percentageAdded ));
                        testModel.addElement(fileName);
                        
                    }
                    else
                    {
                        System.out.println(String.format("Current percentage %.2f: Target %.2f Adding to Devel", percentageAdded, percentTarget ));
                        developmentModel.addElement(fileName);
                    }
                    
                    added = added + 1.0f;
                }
            }
        }
        
        this.lstDevelopmentData.setModel(developmentModel);
        this.lstTestData.setModel(testModel);
            
    }//GEN-LAST:event_btnAutoSelectActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        
        String developmentFiles = lstDevelopmentData.getModel().toString().substring(1, lstDevelopmentData.getModel().toString().length() - 1);
        String testFiles = lstTestData.getModel().toString().substring(1, lstTestData.getModel().toString().length() - 1);
        
        mainApp.prefs.put("DEVELOPMENT_SET", developmentFiles);
        mainApp.prefs.put("TEST_SET", testFiles);
        
        setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnDeleteFromDevelopmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFromDevelopmentActionPerformed
        removeSelectedFromJList (lstDevelopmentData);
    }//GEN-LAST:event_btnDeleteFromDevelopmentActionPerformed

    private void btnDeleteFromTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteFromTestActionPerformed
        removeSelectedFromJList (lstTestData);
    }//GEN-LAST:event_btnDeleteFromTestActionPerformed

    private void addItemsToJList (JList targetList, String items){
        
        System.out.println ("addItemsToJList: '" + items + "'" );
        DefaultListModel sourceModel = ((DefaultListModel)lstAllData.getModel());
        DefaultListModel targetModel = ((DefaultListModel)targetList.getModel());

        for (String item : items.split(","))
        {
            String itemText = item.trim();
            System.out.println ("  ---: '" + item.trim() + "'");

            //String itemText = (String)lstAllData.getModel().getElementAt(item);
            if (!targetModel.contains(itemText))
                targetModel.addElement(itemText);

            if (sourceModel.contains(itemText))
                sourceModel.removeElement(itemText);
        }
    }
    
    private void removeSelectedFromJList (JList sourceList)
    {
        Object[] selectedItems = sourceList.getSelectedValues();

        DefaultListModel sourceModel = ((DefaultListModel)sourceList.getModel());
        DefaultListModel targetModel = ((DefaultListModel)lstAllData.getModel());

        for (Object itemText : selectedItems)
        {
            if(!targetModel.contains(itemText))
                targetModel.addElement(itemText);

            if(sourceModel.contains(itemText))
                sourceModel.removeElement(itemText);
        }

        if (targetModel != null)
        {
            ArrayList lst = new ArrayList();

            for (int i = 0; i < targetModel.getSize(); i++)
            {
                String item = ((String)targetModel.getElementAt(i));
                lst.add(item);
            }

            Collections.sort(lst);

            targetModel.clear();

            for (int i = 0; i < lst.size(); i++ )
                targetModel.addElement(lst.get(i));

            lstAllData.setModel(targetModel);
        }
    }
    
    private void addSelectedToJList (JList targetList)
    {
        Object[] selectedItems = lstAllData.getSelectedValues();
        
        DefaultListModel targetModel = ((DefaultListModel)targetList.getModel());
        DefaultListModel sourceModel = ((DefaultListModel)lstAllData.getModel());

        for (Object itemText : selectedItems)
        {
            if (!targetModel.contains(itemText))
                targetModel.addElement(itemText);

            if (sourceModel.contains(itemText))
                sourceModel.removeElement(itemText);
        }

        if (targetModel != null)
        {
            ArrayList lst = new ArrayList();
            
            for (int i = 0; i < targetModel.getSize(); i++)
            {
                String item = ((String)targetModel.getElementAt(i));
                lst.add(item);
            }
            
            Collections.sort(lst);
            
            targetModel.clear();
            
            for (int i = 0; i < lst.size(); i++ )
                targetModel.addElement(lst.get(i));
            
            targetList.setModel(targetModel);
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                dlgSpecifyData dialog = new dlgSpecifyData(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAllToDevelopment;
    private javax.swing.JButton btnAddAllToTest;
    private javax.swing.JButton btnAddSingleToDevelopment;
    private javax.swing.JButton btnAddSingleToTest;
    private java.awt.Button btnAutoSelect;
    private javax.swing.JButton btnDeleteAllFromDevelopment;
    private javax.swing.JButton btnDeleteAllFromTest;
    private javax.swing.JButton btnDeleteFromDevelopment;
    private javax.swing.JButton btnDeleteFromTest;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox cmbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelPercentageSelected;
    private javax.swing.JList lstAllData;
    private javax.swing.JList lstDevelopmentData;
    private javax.swing.JList lstTestData;
    private javax.swing.JSlider sliderAutoSelect;
    private javax.swing.JTextField txtCustomFilter;
    // End of variables declaration//GEN-END:variables
    
    class MutableList extends JList {
        MutableList() {
            super(new DefaultListModel());
        }
        DefaultListModel getContents() {
            return (DefaultListModel)getModel();
        }
    } 
}
